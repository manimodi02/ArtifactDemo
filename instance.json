{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "AWS CloudFormation Template for git-server.",

    "Parameters" : 
    {
	"Region": {
            "Description": "Name of an existing Amazon EC2 key pair to enable SSH access ( git works over SSH )",
            "Type": "String",
	    "Default": "us-west-2",
            "AllowedValues": [ "us-east-1", "us-west-2", "us-west-1", "us-west-1", "eu-central-1", "eu-west-1", "ap-northeast-1", "ap-northeast-2", "ap-southeast-1", "ap-southeast-2", "sa-east-1", "cn-north-1"]
	},
        "KeyPairName": {
            "Description": "Name of an existing Amazon EC2 key pair to enable SSH access ( git works over SSH )",
            "Type": "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
        },
		"EmailId" : {
	"Description" : "MailId to notify the Pipeline Setup",
	"Type" : "String"
	},
	"OpenemrApplicationName":{
		"Description":"Name of the application to be launched",
		"Type":"String",
		"Default":"firsttest"
	},
        "InstanceType": {
            "Description": "Amazon EC2 instance type.",
            "Type": "String",
            "Default": "t2.micro",
	    "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
            "ConstraintDescription": "Must be a valid Amazon EC2 instance type."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
	    "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },	
    "Mappings": {
	 "AWSInstanceType2Arch" : {
     	   "t1.micro"    : { "Arch" : "PV64"   },
      	   "t2.nano"     : { "Arch" : "HVM64"  },
      	   "t2.micro"    : { "Arch" : "HVM64"  },
      	   "t2.small"    : { "Arch" : "HVM64"  },
      	   "t2.medium"   : { "Arch" : "HVM64"  },
       	   "t2.large"    : { "Arch" : "HVM64"  },
      	   "m1.small"    : { "Arch" : "PV64"   },
      	   "m1.medium"   : { "Arch" : "PV64"   },
      	   "m1.large"    : { "Arch" : "PV64"   },
      	   "m1.xlarge"   : { "Arch" : "PV64"   },
      	   "m2.xlarge"   : { "Arch" : "PV64"   },
       	   "m2.2xlarge"  : { "Arch" : "PV64"   },
    	   "m2.4xlarge"  : { "Arch" : "PV64"   },
      	   "m3.medium"   : { "Arch" : "HVM64"  },
      	   "m3.large"    : { "Arch" : "HVM64"  },
           "m3.xlarge"   : { "Arch" : "HVM64"  },
      	   "m3.2xlarge"  : { "Arch" : "HVM64"  },
           "m4.large"    : { "Arch" : "HVM64"  },
      	   "m4.xlarge"   : { "Arch" : "HVM64"  },
      	   "m4.2xlarge"  : { "Arch" : "HVM64"  },
      	   "m4.4xlarge"  : { "Arch" : "HVM64"  },
      	   "m4.10xlarge" : { "Arch" : "HVM64"  },
      	   "c1.medium"   : { "Arch" : "PV64"   },
      	   "c1.xlarge"   : { "Arch" : "PV64"   },
      	   "c3.large"    : { "Arch" : "HVM64"  },
      	   "c3.xlarge"   : { "Arch" : "HVM64"  },
      	   "c3.2xlarge"  : { "Arch" : "HVM64"  },
      	   "c3.4xlarge"  : { "Arch" : "HVM64"  },
      	   "c3.8xlarge"  : { "Arch" : "HVM64"  },
      	   "c4.large"    : { "Arch" : "HVM64"  },
      	   "c4.xlarge"   : { "Arch" : "HVM64"  },
      	   "c4.2xlarge"  : { "Arch" : "HVM64"  },
      	   "c4.4xlarge"  : { "Arch" : "HVM64"  },
      	   "c4.8xlarge"  : { "Arch" : "HVM64"  },
      	   "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      	   "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      	   "r3.large"    : { "Arch" : "HVM64"  },
      	   "r3.xlarge"   : { "Arch" : "HVM64"  },
      	   "r3.2xlarge"  : { "Arch" : "HVM64"  },
      	   "r3.4xlarge"  : { "Arch" : "HVM64"  },
      	   "r3.8xlarge"  : { "Arch" : "HVM64"  },
           "i2.xlarge"   : { "Arch" : "HVM64"  },
      	   "i2.2xlarge"  : { "Arch" : "HVM64"  },
      	   "i2.4xlarge"  : { "Arch" : "HVM64"  },
      	   "i2.8xlarge"  : { "Arch" : "HVM64"  },
      	   "d2.xlarge"   : { "Arch" : "HVM64"  },
      	   "d2.2xlarge"  : { "Arch" : "HVM64"  },
      	   "d2.4xlarge"  : { "Arch" : "HVM64"  },
      	   "d2.8xlarge"  : { "Arch" : "HVM64"  },
      	   "hi1.4xlarge" : { "Arch" : "HVM64"  },
      	   "hs1.8xlarge" : { "Arch" : "HVM64"  },
      	   "cr1.8xlarge" : { "Arch" : "HVM64"  },
      	   "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

	 "AWSRegionArch2AMI" : {
      	  "us-east-1"        : {"PV64" : "ami-22111148", "HVM64" : "ami-08111162", "HVMG2" : "ami-ebcec381"},
      	  "us-west-2"        : {"PV64" : "ami-792bc219", "HVM64" : "ami-c229c0a2", "HVMG2" : "ami-0f28c06f"},
      	  "us-west-1"        : {"PV64" : "ami-0e087a6e", "HVM64" : "ami-1b0f7d7b", "HVMG2" : "ami-ab9defcb"},
          "eu-west-1"        : {"PV64" : "ami-a5368cd6", "HVM64" : "ami-31328842", "HVMG2" : "ami-d1d652a2"},
      	  "eu-central-1"     : {"PV64" : "ami-2bde3944", "HVM64" : "ami-e2df388d", "HVMG2" : "ami-5240a73d"},
      	  "ap-northeast-1"   : {"PV64" : "ami-37020959", "HVM64" : "ami-f80e0596", "HVMG2" : "ami-34a9a35a"},
      	  "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-6598510b", "HVMG2" : "NOT_SUPPORTED"},
      	  "ap-southeast-1"   : {"PV64" : "ami-ff0cc79c", "HVM64" : "ami-e90dc68a", "HVMG2" : "ami-6f6ca70c"},
      	  "ap-southeast-2"   : {"PV64" : "ami-f5210196", "HVM64" : "ami-f2210191", "HVMG2" : "ami-88c1e1eb"},
      	  "sa-east-1"        : {"PV64" : "ami-661e930a", "HVM64" : "ami-1e159872", "HVMG2" : "NOT_SUPPORTED"},
      	  "cn-north-1"       : {"PV64" : "ami-08ef2465", "HVM64" : "ami-49e22924", "HVMG2" : "NOT_SUPPORTED"}
    },
        "OS2SSHPort": {
            "Linux": {
                "SSHPort": "22"
            }
        }
    },

    "Resources" : {
	 "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
       "Roles": [ {
               "Ref": "SESAccess"
            } ]
      }
    },
      "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : "10.0.0.0/16"
      }
    },
    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.0.0/24"
      }
    },
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },
    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" }
      }
    },
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "VPCGatewayAttachment",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Fn::GetAtt" : ["VPC", "DefaultNetworkAcl"] }
      }
    },
        "SG" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "GroupDescription" : "Enable port 22 as git works over port 22",
                "SecurityGroupIngress" : [
	            {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
                ]
            }
        },
		"RundeckEIP" :{
		"Type" : "AWS::EC2::EIP"
		},
	      "NexusEIP" :{
		"Type" : "AWS::EC2::EIP"
		},
        "GitInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
			"InstanceType" : { "Ref" : "InstanceType" },
		"IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
                    "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] 
				},
                "InstanceType": {
                    "Ref": "InstanceType"
                },
	        "NetworkInterfaces" : [{
          	    "GroupSet"                 : [{ "Ref" : "SG" }],
          	    "AssociatePublicIpAddress" : "true",
          	    "DeviceIndex"              : "0",
          	    "DeleteOnTermination"      : "true",
				"PrivateIpAddress"		   : "10.0.0.16",
          	    "SubnetId"                 : { "Ref" : "PublicSubnet" }
        	}],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            ["#!/bin/bash -ex \n",
							"mkdir -p ~/.aws \n",
							"echo '[default]' > ~/.aws/config \n",
							"echo 'output = json' >> ~/.aws/config \n",
							"echo 'region = '",{"Ref" : "Region"}," >> ~/.aws/config \n",
				
							"timestart=$(date +%s) \n",
							"touch /home/ec2-user/value.txt \n",
							"chmod 777 /home/ec2-user/value.txt \n",
                             "sudo yum update -y \n",
                             "sudo yum install git -y \n",
							   "publicIP=`curl -s http://169.254.169.254/latest/meta-data/public-ipv4`\n",
			   "timeend=$(date +%s) \n",
			   "timediff=`expr $timeend - $timestart` \n",
			   "echo 'BaseStack Ip: '$publicIP''   'Stack name : '",{"Ref" : "AWS::StackName"},"  Start time : $timestart    End time : $timeend    Time difference : $timediff >> /home/ec2-user/value.txt \n",
			   "cd /home/ec2-user/ \n",
			   "aws ses send-email --from ",{"Ref" : "EmailId"}," --to ",{"Ref" : "EmailId"}," --html \"Welcome to SNS. Your values are : \"\"`cat value.txt`\" --subject \"AWS SNS Testing\" \n"
			                          ]
                        ]
                    }
                },
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "Tags":[ { "Key" : "Name", "Value" : { "Fn::Join" : [ "", ["git_",{ "Ref" : "AWS::StackName"}]] }}
                       ]
            }
        },
		"SESAccess": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "AmazonSESAccess",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Action": "*",
                     "Resource": "*"
                  } ]
               }
               } ]
            }
      }
    },
    "Outputs" : {
        "InstanceIdGit" : {
            "Description" : "InstanceId of the newly created EC2 instance",
            "Value" : { "Ref" : "GitInstance" }
        },
        "AZGit" : {
            "Description" : "Availability Zone of the newly created EC2 instance",
            "Value" : { "Fn::GetAtt" : [ "GitInstance", "AvailabilityZone" ] }
        },
        "PublicDNSGit" : {
            "Description" : "Public DNSName of the newly created EC2 instance",
            "Value" : { "Fn::GetAtt" : [ "GitInstance", "PublicDnsName" ] }
        },
        "PublicIPGit" : {
            "Description" : "Public IP address of the newly created EC2 instance",
            "Value" : { "Fn::Join" : [ "",[ {"Fn::GetAtt": ["GitInstance", "PublicIp" ]},":22"]]}
        },
        "VPCId" : {
        "Description" : "VPC ID",
        "Value" :  { "Ref" : "VPC" }
        },
        "PublicSubnet" : {
        "Description" : "The subnet ID to use for public web servers",
        "Value" :  { "Ref" : "PublicSubnet" }
        },
		"RundeckElasticIP" : {
		"Description" : "Rundeck Elastic IP",
		"Value" : {"Ref" : "RundeckEIP"}
		},
		"NexusIP" : {
		"Description" : "Rundeck Elastic IP",
		"Value" : {"Ref" : "NexusEIP"}
		},
		"EmailId" : {
		"Description" : "User Email ID",
		"Value" : {"Ref": "EmailId"}
		},
		"OpenemrApplicationName":{
		"Description":"Application Name",
		"Value":{"Ref":"OpenemrApplicationName"}
		}
    } 
}